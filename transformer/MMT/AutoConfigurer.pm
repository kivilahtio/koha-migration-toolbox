package MMT::AutoConfigurer;

use MMT::Pragmas;

#External modules
use Text::CSV;

#Local modules
my $log = Log::Log4perl->get_logger(__PACKAGE__);

=head1 NAME

MMT::AutoConfigurer

=head1 DESCRIPTION

Creates unaltered translation tables from table contents

=cut

sub configure($rules) {
  for my $rule (@$rules) {
    my $sourceFile =
      (MMT::Validator::checkIsAbsolutePath($rule->{sourceFile})) ? $rule->{sourceFile} :
                                                                  MMT::Config::exportsDir().'/'.$rule->{sourceFile};
    my $destinationFile =
      (MMT::Validator::checkIsAbsolutePath($rule->{destinationFile})) ? $rule->{destinationFile} :
                                                                  $ENV{MMT_HOME}.'/config/translationTables/'.$rule->{destinationFile};


    open(my $FHin,  '<:encoding(UTF-8)', $sourceFile)      or $log->logdie("Unable to open file '$sourceFile' for reading: $!");
    open(my $FHout, '>:encoding(UTF-8)', $destinationFile) or $log->logdie("Unable to open file '$destinationFile' for writing: $!");

    my $csv = Text::CSV->new(MMT::Config::csvInputNew());
    $csv->header($FHin, MMT::Config::csvInputHeader());
    $log->debug("Loading .csv-file '".$sourceFile."', identified columns '".join(',', $csv->column_names())."'");

    my @colNames = $csv->column_names();
    my @sb = (
      '---',
      '',
      '#',
      '# AUTOGENERATED BY MMT::AutoConfigurer',
      '# source: '.$sourceFile,
      '# destination: '.$destinationFile,
      '#',
      '# '.$rule->{description},
      '',
      '',
      '#'.$rule->{sourcePrimaryKeyColumn}.',KohaValue',
      '#             '.join(", ", @colNames)
    );

    while (my $obj = $csv->getline_hr($FHin)) {
      my %_ = %$obj;
      my @cols = map {$_ =~ s/(?:\p{IsCntrl}|\s{2,}|\s+$|^\s+|\W)//gsm; $_ || 'KONVERSIO';} @_{ @colNames };
      push(@sb, $_{$rule->{sourcePrimaryKeyColumn}}.
                ': '.
                eval($rule->{translationTemplate}).
                ' # '.join(", ", @cols)
      );
    }

    push(@sb, '');
    push(@sb, '_DEFAULT_: warning()');
    push(@sb, '');

    print $FHout join("\n",@sb);

    close $FHin;
    close $FHout;
  }
}

return 1;
